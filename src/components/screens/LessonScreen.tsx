import React, { useMemo, useState } from 'react';
import { useApp } from '../../contexts/AppContext';
import { Card } from '../ui/Card';
import { Button } from '../ui/Button';
import { VideoPlayer } from '../media/VideoPlayer';
import { EmojiIcon } from '../ui/EmojiIcon';
import { PracticeInline } from '../practice/PracticeInline';
import { MODULES } from '../../lib/data';

export function LessonScreen() {
  const { t, navigate, currentScreen, isModuleUnlocked, isDarkMode } = useApp();
  const [activeTab, setActiveTab] = useState<string>(
    (currentScreen.params && (currentScreen.params as any).tab) || 'video'
  );
  const [offlineDownload, setOfflineDownload] = useState(false);
  const [contactMessage, setContactMessage] = useState('');
  const [moduleDropdownOpen, setModuleDropdownOpen] = useState(false);
  const [showPurchasePopup, setShowPurchasePopup] = useState(false);
  const [requestedModuleId, setRequestedModuleId] = useState<string | null>(null);
  
  const { moduleId } = currentScreen.params;
  const modules = MODULES;
  const currentModule = useMemo(() => modules.find((m) => m.id === moduleId), [modules, moduleId]);
  const displayTitle = currentModule ? currentModule.title : moduleId;
  const watermark = `UID-1234 ¬∑ ${new Date().toLocaleString()}`;
  
  const handleKonspektImgError: React.ReactEventHandler<HTMLImageElement> = (e) => {
    const target = e.currentTarget;
    const url = new URL(target.src);
    const pathname = url.pathname || '';
    if (pathname.endsWith('/unnamed.jpg')) {
      target.src = '/unnamed.png';
      return;
    }
    target.onerror = null;
    target.src = '/image.png';
  };

  const lessonTabs = [
    { key: 'article', label: t.article },
    { key: 'video3d', label: t.video3d },
    { key: 'video', label: 'Video d…ôrs' },
    { key: 'materials', label: 'Konspekt' },
    { key: 'penalties', label: 'C…ôrim…ô' },
  ];

  function renderTabContent() {
    switch (activeTab) {
      case 'video':
        return (
          <div className="space-y-4">
            {/* Modern Video Card */}
            <div className={`rounded-3xl overflow-hidden shadow-2xl ${
              isDarkMode 
                ? 'bg-gradient-to-br from-gray-800 to-gray-900 border border-gray-700/50' 
                : 'bg-gradient-to-br from-white to-gray-50 border border-gray-200/50'
            }`}>
              {/* Video Header */}
              <div className="p-4 pb-2">
                <div className="flex items-center justify-between mb-3">
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center">
                      <span className="text-white text-lg">‚ñ∂Ô∏è</span>
                    </div>
                    <div>
                      <h3 className={`text-lg font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>
                        Video D…ôrs
                      </h3>
                      <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>
                        Klassik video d…ôrs materialƒ±
                      </p>
                    </div>
                  </div>
                  <div className="flex gap-2">
                    <div className="px-2 py-1 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-full text-xs font-bold">
                      HD
                    </div>
                  </div>
                </div>
              </div>

              {/* Video Player */}
              <div className="px-4">
                <VideoPlayer 
                  src="https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4"
                  watermark={watermark}
                  heightClass="h-56"
                  is3D={false}
                />
              </div>

              {/* Video Footer with Actions */}
              <div className="p-4 pt-3">
                <div className="grid grid-cols-2 gap-3 mb-4">
                  <button
                    onClick={() => setOfflineDownload(!offlineDownload)}
                    className={`group flex items-center justify-center gap-3 px-4 py-3 rounded-2xl transition-all duration-300 transform hover:scale-105 ${
                      offlineDownload 
                        ? 'bg-gradient-to-r from-emerald-500 to-green-500 text-white shadow-lg shadow-emerald-500/25' 
                        : isDarkMode
                          ? 'bg-gray-700/50 text-gray-200 hover:bg-gray-600/50 border border-gray-600'
                          : 'bg-gray-100/50 text-gray-700 hover:bg-gray-200/50 border border-gray-200'
                    }`}
                  >
                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                      offlineDownload ? 'bg-white/20' : isDarkMode ? 'bg-gray-600' : 'bg-gray-200'
                    }`}>
                      <span className="text-lg">{offlineDownload ? '‚úÖ' : '‚¨áÔ∏è'}</span>
                    </div>
                    <div className="text-left">
                      <div className="text-sm font-bold">
                        {offlineDownload ? 'Y√ºkl…ôndi' : 'Offline Y√ºkl…ô'}
                      </div>
                      <div className={`text-xs ${
                        offlineDownload ? 'text-white/80' : isDarkMode ? 'text-gray-400' : 'text-gray-500'
                      }`}>
                        {offlineDownload ? 'Hazƒ±rdƒ±r' : 'Sonra baxƒ±n'}
                      </div>
                    </div>
                  </button>

                  <button
                    onClick={() => navigate('TeacherContact')}
                    className={`group flex items-center justify-center gap-3 px-4 py-3 rounded-2xl transition-all duration-300 transform hover:scale-105 ${
                      isDarkMode
                        ? 'bg-gray-700/50 text-gray-200 hover:bg-gray-600/50 border border-gray-600'
                        : 'bg-gray-100/50 text-gray-700 hover:bg-gray-200/50 border border-gray-200'
                    }`}
                  >
                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                      isDarkMode ? 'bg-gray-600' : 'bg-gray-200'
                    }`}>
                      <span className="text-lg">‚ùì</span>
                    </div>
                    <div className="text-left">
                      <div className="text-sm font-bold">Sual Ver</div>
                      <div className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>
                        M√º…ôlliml…ô …ôlaq…ô
                      </div>
                    </div>
                  </button>
                </div>

                {/* Progress Section */}
                <div className={`p-4 rounded-2xl ${
                  isDarkMode 
                    ? 'bg-gray-700/30 border border-gray-600/50' 
                    : 'bg-gray-50/50 border border-gray-200/50'
                }`}>
                  <div className="flex items-center justify-between mb-3">
                    <div className="flex items-center gap-2">
                      <div className="w-6 h-6 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center">
                        <span className="text-white text-xs">üìä</span>
                      </div>
                      <span className={`text-sm font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>
                        D…ôrs ƒ∞r…ôlil…ôyi≈üi
                      </span>
                    </div>
                    <span className={`text-sm font-bold text-blue-500`}>
                      60%
                    </span>
                  </div>
                  
                  <div className={`w-full h-3 rounded-full overflow-hidden ${
                    isDarkMode ? 'bg-gray-600' : 'bg-gray-200'
                  }`}>
                    <div 
                      className="h-full bg-gradient-to-r from-blue-400 via-purple-400 to-blue-500 rounded-full relative overflow-hidden"
                      style={{ width: '60%' }}
                    >
                      <div className="absolute inset-0 bg-gradient-to-r from-white/30 to-transparent animate-pulse"></div>
                    </div>
                  </div>
                  
                  <div className="flex justify-between mt-2 text-xs">
                    <span className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>
                      Ba≈ülanƒüƒ±c
                    </span>
                    <span className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>
                      Tamamlandƒ±
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        );

      case 'article':
        return (
          <Card>
            <div className="font-bold mb-2 text-gray-900">
              Madd…ô ‚Äî Yol ni≈üanlarƒ±nƒ±n m…ônasƒ±
            </div>
            <div className="text-sm text-gray-700">
              Burada qanunun m…ôtnind…ôn par√ßalar g√∂st…ôril…ôc…ôk. (Demo kontent)
            </div>
          </Card>
        );

      case 'materials':
        return (
          <Card>
            <div className={`font-bold mb-2 ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>Konspekt</div>
            {moduleId === 'M25' || moduleId === 'M8' ? (
              <div className={`text-sm leading-relaxed ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                <div className="space-y-3">
                  <div>
                    <div className="font-semibold mb-1">I.</div>
                    <p>
                      Velosipedl…ôr v…ô mopedl…ôr yalnƒ±z yolun saƒü k…ônar zolaƒüƒ±nda, yol ni≈üanlarƒ± v…ô ya yol ni≈üanlanmasƒ±nƒ±n t…ôl…ôbl…ôrin…ô riay…ôt etm…ôkl…ô, m√ºmk√ºn q…ôd…ôr saƒü t…ôr…ôfd…ô bir c…ôrg…ô il…ô h…ôr…ôk…ôt etm…ôlidirl…ôr. Piyadalar √º√ß√ºn mane…ô yaratmamaq ≈ü…ôrti il…ô velosipedl…ôrin yol √ßiyini il…ô h…ôr…ôk…ôtin…ô icaz…ô verilir. Velosiped d…ôst…ôl…ôri yolun h…ôr…ôk…ôt hiss…ôsi il…ô getdikl…ôri vaxt h…ôr…ôsi 10 velosiped√ßid…ôn √ßox olmayan qruplardan ibar…ôt olmalƒ±dƒ±rlar. N…ôqliyyat vasit…ôl…ôrinin √∂tm…ôsini asanla≈üdƒ±rmaq √º√ß√ºn d…ôst…ôl…ôrin arasƒ±ndakƒ± m…ôsaf…ô 80‚Äî100 metr olmalƒ±dƒ±r.
                    </p>
                  </div>

                  <div className="my-3 flex justify-center">
                    <img
                      src="/unnamed.jpg"
                      alt="Velosiped v…ô moped qaydalarƒ±"
                      className={`max-w-full rounded-xl shadow-md ${isDarkMode ? 'border border-gray-700' : ''}`}
                      onError={handleKonspektImgError}
                    />
                  </div>

                  <div>
                    <div className="font-semibold mb-1">II. Velosiped v…ô moped s√ºr√ºc√ºl…ôrin…ô:</div>
                    <ol className="list-decimal pl-5 space-y-1">
                      <li>
                        s√ºkanƒ± tutmadan v…ô ya t…ôhl√ºk…ôsizlik d…ôbilq…ôl…ôrind…ôn istifad…ô qaydalarƒ±nƒ± pozmaqla h…ôr…ôk…ôt etm…ôk;
                      </li>
                      <li>
                        velosipedin v…ô mopedin uzunu v…ô ya eni √ºzr…ô qabaritl…ôrind…ôn 0,5 metrd…ôn artƒ±q k…ônara √ßƒ±xan v…ô ya velosipedi, mopedi idar…ô etm…ôy…ô mane olan y√ºk aparmaq;
                      </li>
                      <li>
                        velosiped yolu olduƒüu halda, onun yanƒ±ndakƒ± yolla h…ôr…ôk…ôt etm…ôk (yalnƒ±z velosiped√ßil…ôr…ô ≈üamil edilir);
                      </li>
                      <li>
                        tramvay h…ôr…ôk…ôti olan yollarda v…ô h…ômin istiqam…ôtd…ô h…ôr…ôk…ôt √º√ß√ºn bird…ôn artƒ±q zolaƒüƒ± olan yollarda sola v…ô ya geriy…ô d√∂nm…ôk;
                      </li>
                      <li> s…ôrni≈üin da≈üƒ±maq; </li>
                      <li> nasaz velosipedd…ôn istifad…ô etm…ôk; </li>
                      <li>
                        velosiped v…ô ya mopedl…ô birg…ô istismar √º√ß√ºn n…ôz…ôrd…ô tutulan qo≈üqunun yed…ôy…ô alƒ±nmasƒ± istisna olmaqla, velosipedl…ôri v…ô mopedl…ôri, el…ôc…ô d…ô velosipedl…ôrl…ô v…ô mopedl…ôrl…ô yed…ôy…ô almaq qadaƒüandƒ±r.
                      </li>
                    </ol>
                  </div>
                </div>
              </div>
            ) : (
              <div className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                D…ôrs konspekti v…ô …ôlav…ô materiallar buraya d√º≈ü…ôc…ôk. (Demo)
              </div>
            )}
          </Card>
        );

      case 'video3d':
        return (
          <div className="space-y-4">
            {/* Modern Video Card */}
            <div className={`rounded-3xl overflow-hidden shadow-2xl ${
              isDarkMode 
                ? 'bg-gradient-to-br from-gray-800 to-gray-900 border border-gray-700/50' 
                : 'bg-gradient-to-br from-white to-gray-50 border border-gray-200/50'
            }`}>
              {/* Video Header */}
              <div className="p-4 pb-2">
                <div className="flex items-center justify-between mb-3">
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 rounded-full bg-gradient-to-r from-emerald-500 to-green-500 flex items-center justify-center">
                      <span className="text-white text-lg">üé•</span>
                    </div>
                    <div>
                      <h3 className={`text-lg font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>
                        3D ƒ∞nteraktiv D…ôrs
                      </h3>
                      <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>
                        Y√ºks…ôk keyfiyy…ôtli 3D animasiya
                      </p>
                    </div>
                  </div>
                  <div className="flex gap-2">
                    <div className="px-2 py-1 bg-gradient-to-r from-emerald-500 to-green-500 text-white rounded-full text-xs font-bold">
                      HD
                    </div>
                    <div className="px-2 py-1 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-full text-xs font-bold">
                      3D
                    </div>
                  </div>
                </div>
              </div>

              {/* Video Player */}
              <div className="px-4">
                <VideoPlayer 
                  src="https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4"
                  watermark={watermark}
                  heightClass="h-56"
                  is3D={true}
                />
              </div>

              {/* Video Footer with Actions */}
              <div className="p-4 pt-3">
                <div className="grid grid-cols-2 gap-3 mb-4">
                  <button
                    onClick={() => setOfflineDownload(!offlineDownload)}
                    className={`group flex items-center justify-center gap-3 px-4 py-3 rounded-2xl transition-all duration-300 transform hover:scale-105 ${
                      offlineDownload 
                        ? 'bg-gradient-to-r from-emerald-500 to-green-500 text-white shadow-lg shadow-emerald-500/25' 
                        : isDarkMode
                          ? 'bg-gray-700/50 text-gray-200 hover:bg-gray-600/50 border border-gray-600'
                          : 'bg-gray-100/50 text-gray-700 hover:bg-gray-200/50 border border-gray-200'
                    }`}
                  >
                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                      offlineDownload ? 'bg-white/20' : isDarkMode ? 'bg-gray-600' : 'bg-gray-200'
                    }`}>
                      <span className="text-lg">{offlineDownload ? '‚úÖ' : '‚¨áÔ∏è'}</span>
                    </div>
                    <div className="text-left">
                      <div className="text-sm font-bold">
                        {offlineDownload ? 'Y√ºkl…ôndi' : 'Offline Y√ºkl…ô'}
                      </div>
                      <div className={`text-xs ${
                        offlineDownload ? 'text-white/80' : isDarkMode ? 'text-gray-400' : 'text-gray-500'
                      }`}>
                        {offlineDownload ? 'Hazƒ±rdƒ±r' : 'Sonra baxƒ±n'}
                      </div>
                    </div>
                  </button>

                  <button
                    onClick={() => navigate('TeacherContact')}
                    className={`group flex items-center justify-center gap-3 px-4 py-3 rounded-2xl transition-all duration-300 transform hover:scale-105 ${
                      isDarkMode
                        ? 'bg-gray-700/50 text-gray-200 hover:bg-gray-600/50 border border-gray-600'
                        : 'bg-gray-100/50 text-gray-700 hover:bg-gray-200/50 border border-gray-200'
                    }`}
                  >
                    <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                      isDarkMode ? 'bg-gray-600' : 'bg-gray-200'
                    }`}>
                      <span className="text-lg">‚ùì</span>
                    </div>
                    <div className="text-left">
                      <div className="text-sm font-bold">Sual Ver</div>
                      <div className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>
                        M√º…ôlliml…ô …ôlaq…ô
                      </div>
                    </div>
                  </button>
                </div>

                {/* Progress Section */}
                <div className={`p-4 rounded-2xl ${
                  isDarkMode 
                    ? 'bg-gray-700/30 border border-gray-600/50' 
                    : 'bg-gray-50/50 border border-gray-200/50'
                }`}>
                  <div className="flex items-center justify-between mb-3">
                    <div className="flex items-center gap-2">
                      <div className="w-6 h-6 rounded-full bg-gradient-to-r from-emerald-500 to-green-500 flex items-center justify-center">
                        <span className="text-white text-xs">üìä</span>
                      </div>
                      <span className={`text-sm font-bold ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>
                        D…ôrs ƒ∞r…ôlil…ôyi≈üi
                      </span>
                    </div>
                    <span className={`text-sm font-bold text-emerald-500`}>
                      75%
                    </span>
                  </div>
                  
                  <div className={`w-full h-3 rounded-full overflow-hidden ${
                    isDarkMode ? 'bg-gray-600' : 'bg-gray-200'
                  }`}>
                    <div 
                      className="h-full bg-gradient-to-r from-emerald-400 via-green-400 to-emerald-500 rounded-full relative overflow-hidden"
                      style={{ width: '75%' }}
                    >
                      <div className="absolute inset-0 bg-gradient-to-r from-white/30 to-transparent animate-pulse"></div>
                    </div>
                  </div>
                  
                  <div className="flex justify-between mt-2 text-xs">
                    <span className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>
                      Ba≈ülanƒüƒ±c
                    </span>
                    <span className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>
                      Tamamlandƒ±
                    </span>
                  </div>
                </div>
              </div>
            </div>

          </div>
        );

      case 'penalties':
        return (
          <div className="space-y-4">
            {/* Modern Penalties Card */}
            <div className={`rounded-3xl overflow-hidden shadow-2xl ${
              isDarkMode 
                ? 'bg-gradient-to-br from-red-900 to-red-800 border border-red-700/50' 
                : 'bg-gradient-to-br from-red-50 to-orange-50 border border-red-200/50'
            }`}>
              {/* Penalties Header */}
              <div className="p-4 pb-2">
                <div className="flex items-center justify-between mb-3">
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 rounded-full bg-gradient-to-r from-red-500 to-orange-500 flex items-center justify-center">
                      <span className="text-white text-lg">‚öñÔ∏è</span>
                    </div>
                    <div>
                      <h3 className={`text-lg font-bold ${isDarkMode ? 'text-red-100' : 'text-red-900'}`}>
                        C…ôrim…ôl…ôr
                      </h3>
                      <p className={`text-sm ${isDarkMode ? 'text-red-300' : 'text-red-700'}`}>
                        ƒ∞nzibati X…ôtalar M…ôc…ôll…ôsi
                      </p>
                    </div>
                  </div>
                  <div className="flex gap-2">
                    <div className="px-2 py-1 bg-gradient-to-r from-red-500 to-orange-500 text-white rounded-full text-xs font-bold">
                      YENƒ∞
                    </div>
                  </div>
                </div>
              </div>

              {/* Penalties Info */}
              <div className="px-4">
                <div className={`p-4 rounded-2xl ${
                  isDarkMode 
                    ? 'bg-red-800/30 border border-red-700/50' 
                    : 'bg-red-100/50 border border-red-200/50'
                }`}>
                  <div className="flex items-center gap-3 mb-3">
                    <div className="w-8 h-8 rounded-full bg-gradient-to-r from-red-500 to-orange-500 flex items-center justify-center">
                      <span className="text-white text-sm">üìã</span>
                    </div>
                    <span className={`text-sm font-bold ${isDarkMode ? 'text-red-100' : 'text-red-900'}`}>
                      ∆èsas pozuntu n√∂vl…ôri
                    </span>
                  </div>
                  
                  <div className="space-y-4 ml-6">
                    {/* Speed Violations */}
                    <div className={`p-4 rounded-xl ${isDarkMode ? 'bg-red-900/20' : 'bg-red-100/30'}`}>
                      <div className="flex items-center gap-3 mb-3">
                        <span className="text-lg">üöóüí®</span>
                        <span className={`text-base font-medium ${isDarkMode ? 'text-red-200' : 'text-red-800'}`}>
                          S√ºr…ôt h…ôddinin pozulmasƒ± (40-200 manat)
                        </span>
                      </div>
                      <div className="w-full aspect-video">
                        <VideoPlayer 
                          src="/video 6.mp4"
                          watermark="DDA.az"
                          heightClass="h-full"
                          is3D={false}
                        />
                      </div>
                    </div>

                    {/* Traffic Light Violations */}
                    <div className={`p-4 rounded-xl ${isDarkMode ? 'bg-red-900/20' : 'bg-red-100/30'}`}>
                      <div className="flex items-center gap-3 mb-3">
                        <span className="text-lg">üö¶</span>
                        <span className={`text-base font-medium ${isDarkMode ? 'text-red-200' : 'text-red-800'}`}>
                          ƒ∞≈üƒ±qfor siqnallarƒ±nƒ±n pozulmasƒ± (100-200 manat)
                        </span>
                      </div>
                      <div className="w-full aspect-video">
                        <VideoPlayer 
                          src="/Madd…ô 49 NV-nin yerl…ô≈üm…ôsi 0002.mp4"
                          watermark="DDA.az"
                          heightClass="h-full"
                          is3D={false}
                        />
                      </div>
                    </div>

                    {/* Document Violations */}
                    <div className={`p-4 rounded-xl ${isDarkMode ? 'bg-red-900/20' : 'bg-red-100/30'}`}>
                      <div className="flex items-center gap-3 mb-3">
                        <span className="text-lg">üìÑ</span>
                        <span className={`text-base font-medium ${isDarkMode ? 'text-red-200' : 'text-red-800'}`}>
                          S…ôn…ôdl…ôrl…ô baƒülƒ± pozuntular (100-500 manat)
                        </span>
                      </div>
                      <div className="w-full aspect-video">
                        <VideoPlayer 
                          src="/video 6.mp4"
                          watermark="DDA.az"
                          heightClass="h-full"
                          is3D={false}
                        />
                      </div>
                    </div>

                    {/* Pedestrian Violations */}
                    <div className={`p-4 rounded-xl ${isDarkMode ? 'bg-red-900/20' : 'bg-red-100/30'}`}>
                      <div className="flex items-center gap-3 mb-3">
                        <span className="text-lg">üö∂</span>
                        <span className={`text-base font-medium ${isDarkMode ? 'text-red-200' : 'text-red-800'}`}>
                          Piyadalarƒ±n h√ºquqlarƒ±nƒ±n pozulmasƒ± (50-200 manat)
                        </span>
                      </div>
                      <div className="w-full aspect-video">
                        <VideoPlayer 
                          src="/Madd…ô 49 NV-nin yerl…ô≈üm…ôsi 0002.mp4"
                          watermark="DDA.az"
                          heightClass="h-full"
                          is3D={false}
                        />
                      </div>
                    </div>

                    {/* Alcohol Violations */}
                    <div className={`p-4 rounded-xl ${isDarkMode ? 'bg-red-900/20' : 'bg-red-100/30'}`}>
                      <div className="flex items-center gap-3 mb-3">
                        <span className="text-lg">üç∑</span>
                        <span className={`text-base font-medium ${isDarkMode ? 'text-red-200' : 'text-red-800'}`}>
                          S…ôrxo≈üluq halƒ±nda idar…ôetm…ô (1000-2000 manat)
                        </span>
                      </div>
                      <div className="w-full aspect-video">
                        <VideoPlayer 
                          src="/video 6.mp4"
                          watermark="DDA.az"
                          heightClass="h-full"
                          is3D={false}
                        />
                      </div>
                    </div>

                    {/* Parking Violations */}
                    <div className={`p-4 rounded-xl ${isDarkMode ? 'bg-red-900/20' : 'bg-red-100/30'}`}>
                      <div className="flex items-center gap-3 mb-3">
                        <span className="text-lg">üÖøÔ∏è</span>
                        <span className={`text-base font-medium ${isDarkMode ? 'text-red-200' : 'text-red-800'}`}>
                          Qadaƒüan yerl…ôrd…ô dayanma (20-100 manat)
                        </span>
                      </div>
                      <div className="w-full aspect-video">
                        <VideoPlayer 
                          src="/Madd…ô 49 NV-nin yerl…ô≈üm…ôsi 0002.mp4"
                          watermark="DDA.az"
                          heightClass="h-full"
                          is3D={false}
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              {/* Penalties Action */}
              <div className="p-4 pt-3">
                <button
                  onClick={() => navigate('Fines')}
                  className={`group relative overflow-hidden w-full p-4 rounded-2xl transition-all duration-300 transform hover:scale-[1.02] shadow-xl ${
                    isDarkMode
                      ? 'bg-gradient-to-r from-red-600 to-orange-600 hover:from-red-700 hover:to-orange-700 text-white shadow-red-500/25'
                      : 'bg-gradient-to-r from-red-500 to-orange-500 hover:from-red-600 hover:to-orange-600 text-white shadow-red-500/25'
                  }`}
                >
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-4">
                      <div className="w-12 h-12 rounded-xl bg-white/20 flex items-center justify-center backdrop-blur-sm">
                        <span className="text-xl">üé•</span>
                      </div>
                      <div className="text-left">
                        <div className="text-base font-bold">B√ºt√ºn C…ôrim…ôl…ôri G√∂r</div>
                        <div className="text-sm text-white/80">Video v…ô m…ôtn materiallarƒ± il…ô</div>
                      </div>
                    </div>
                    <div className="w-10 h-10 rounded-full bg-white/20 flex items-center justify-center">
                      <span className="text-white text-lg">‚Üí</span>
                    </div>
                  </div>
                  
                  {/* Hover effect */}
                  <div className="absolute inset-0 bg-gradient-to-r from-white/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                </button>

              </div>
            </div>
          </div>
        );

      default:
        return null;
    }
  }

  return (
    <>
    <div className={`min-h-screen ${isDarkMode ? 'bg-gray-900' : 'bg-gray-50'}`}>
      {/* Modern Header Section */}
      <div className={`sticky top-0 z-30 backdrop-blur-xl border-b ${
        isDarkMode 
          ? 'bg-gray-900/80 border-gray-800' 
          : 'bg-white/80 border-gray-200'
      }`}>
        <div className="p-4">
          {/* Back button for video3d tab */}
          {activeTab === 'video3d' && (
            <button
              onClick={() => navigate('Home')}
              className={`mb-3 flex items-center gap-2 px-4 py-2 rounded-xl transition-all duration-300 transform hover:scale-105 active:scale-95 ${
                isDarkMode
                  ? 'bg-gray-800 text-gray-100 hover:bg-gray-700'
                  : 'bg-white text-gray-900 hover:bg-gray-50 shadow-md'
              }`}
            >
              <span className="text-xl">‚Üê</span>
              <span className="font-bold">Geri</span>
            </button>
          )}
          <div className="relative">
            <button
              onClick={() => setModuleDropdownOpen(!moduleDropdownOpen)}
              className={`w-full px-5 py-4 rounded-2xl text-left flex items-center justify-between shadow-lg transition-all duration-300 hover:shadow-xl ${
                isDarkMode
                  ? 'bg-gradient-to-r from-gray-800 to-gray-700 text-gray-100 hover:from-gray-700 hover:to-gray-600'
                  : 'bg-gradient-to-r from-white to-gray-50 text-gray-900 hover:from-gray-50 hover:to-white'
              }`}
            >
              <div className="flex items-center gap-3">
                <div className={`w-12 h-12 rounded-xl flex items-center justify-center ${
                  isDarkMode ? 'bg-emerald-500/20' : 'bg-emerald-100'
                }`}>
                  <span className="text-xl">üìö</span>
                </div>
                <div>
                  <div className="font-bold text-lg">{displayTitle}</div>
                  <div className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>
                    D…ôrs Modulu
                  </div>
                </div>
              </div>
              <div className={`w-10 h-10 rounded-full flex items-center justify-center transition-all duration-300 ${
                moduleDropdownOpen 
                  ? 'rotate-180 bg-emerald-500/20' 
                  : isDarkMode ? 'bg-gray-600' : 'bg-gray-200'
              }`}>
                <span className="text-emerald-500">‚ñº</span>
              </div>
            </button>

            {/* Dropdown Menu */}
            {moduleDropdownOpen && (
              <div className={`absolute top-full left-0 right-0 mt-2 rounded-2xl shadow-2xl max-h-60 overflow-y-auto z-40 border backdrop-blur-xl ${
                isDarkMode ? 'bg-gray-800/90 border-gray-700/50' : 'bg-white/90 border-gray-200/50'
              }`}>
                {modules.map((m) => {
                  const id = m.id;
                  const unlocked = isModuleUnlocked(id);
                  const isActive = moduleId === id;
                  return (
                    <button
                      key={id}
                      onClick={() => {
                        if (unlocked) {
                          navigate('Lesson', { moduleId: id });
                          setModuleDropdownOpen(false);
                        } else {
                          setRequestedModuleId(id);
                          setShowPurchasePopup(true);
                        }
                      }}
                      className={`w-full px-4 py-3 text-left border-b last:border-b-0 min-h-[44px] transition-colors ${
                        isDarkMode ? 'border-gray-700' : 'border-gray-100'
                      } ${
                        unlocked
                          ? isActive
                            ? isDarkMode
                              ? 'bg-emerald-900/20 text-emerald-300 font-medium'
                              : 'bg-emerald-50 text-emerald-700 font-medium'
                            : isDarkMode
                              ? 'text-gray-100 hover:bg-gray-700'
                              : 'text-gray-700 hover:bg-gray-50'
                          : isDarkMode
                            ? 'text-gray-500 hover:bg-gray-800'
                            : 'text-gray-400 hover:bg-white'
                      }`}
                    >
                      <div className="flex items-center justify-between gap-2">
                        <span className="flex-1 min-w-0 truncate">{m.title}</span>
                        {!unlocked && <span className="text-sm flex-shrink-0">üîí</span>}
                      </div>
                    </button>
                  );
                })}
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="p-4 pb-32">
        {/* Modern Tab Navigation */}
        <div className={`mb-4 p-2 rounded-2xl shadow-inner ${
          isDarkMode 
            ? 'bg-gray-800/50 backdrop-blur-sm' 
            : 'bg-white/50 backdrop-blur-sm border border-gray-200/50'
        }`}>
          <div className="grid grid-cols-5 gap-2">
            {lessonTabs.map((tab) => {
              const isActive = activeTab === tab.key;
              const is3DTab = tab.key === 'video3d';
              const isPenaltiesTab = tab.key === 'penalties';
              
              return (
                <button
                  key={tab.key}
                  onClick={() => {
                    setActiveTab(tab.key);
                    navigate('Lesson', { moduleId, tab: tab.key });
                  }}
                  className={`relative p-3 rounded-xl transition-all duration-300 transform hover:scale-105 ${
                    isActive
                      ? is3DTab
                        ? 'bg-gradient-to-br from-emerald-500 to-green-600 text-white shadow-lg shadow-emerald-500/25'
                        : isPenaltiesTab
                          ? 'bg-gradient-to-br from-red-500 to-orange-600 text-white shadow-lg shadow-red-500/25'
                          : 'bg-gradient-to-br from-blue-500 to-purple-600 text-white shadow-lg shadow-blue-500/25'
                      : isDarkMode
                        ? 'text-gray-400 hover:text-gray-200 hover:bg-gray-700/50'
                        : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100/50'
                  }`}
                >
                  <div className="flex flex-col items-center gap-1">
                    <div className={`text-xl ${isActive ? 'scale-110' : ''} transition-transform duration-300`}>
                      {tab.key === 'article' && 'üìö'}
                      {tab.key === 'video3d' && 'üé•'}
                      {tab.key === 'video' && '‚ñ∂Ô∏è'}
                      {tab.key === 'materials' && 'üìù'}
                      {tab.key === 'penalties' && '‚öñÔ∏è'}
                    </div>
                    <span className="text-xs font-bold leading-tight text-center">
                      {tab.label}
                    </span>
                  </div>
                  
                  {/* Active indicator */}
                  {isActive && (
                    <div className="absolute inset-0 bg-white/10 rounded-xl"></div>
                  )}
                  
                  {/* Special indicators */}
                  {is3DTab && (
                    <div className="absolute -top-1 -right-1 w-4 h-4 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center">
                      <div className="w-2 h-2 bg-white rounded-full animate-pulse"></div>
                    </div>
                  )}
                  
                  {isPenaltiesTab && (
                    <div className="absolute -top-1 -right-1 w-4 h-4 bg-gradient-to-r from-red-400 to-red-500 rounded-full flex items-center justify-center">
                      <div className="w-2 h-2 bg-white rounded-full animate-pulse"></div>
                    </div>
                  )}
                </button>
              );
            })}
          </div>
        </div>

        {/* Tab Content */}
        {renderTabContent()}

        {/* Modern Action Buttons - Hide in penalties tab */}
        {activeTab !== 'penalties' && (
          <div className="mt-4 space-y-4">
            {/* Primary Actions */}
            <div className="grid grid-cols-1 gap-4">
              <button
                onClick={() => navigate('Practice', { moduleId })}
                className={`group relative overflow-hidden p-6 rounded-3xl transition-all duration-300 transform hover:scale-[1.02] shadow-xl ${
                  isDarkMode
                    ? 'bg-gradient-to-r from-emerald-600 to-green-600 hover:from-emerald-700 hover:to-green-700 text-white shadow-emerald-500/25'
                    : 'bg-gradient-to-r from-emerald-500 to-green-500 hover:from-emerald-600 hover:to-green-600 text-white shadow-emerald-500/25'
                }`}
              >
                <div className="flex items-center justify-center gap-4">
                  <div className="w-14 h-14 rounded-2xl bg-white/20 flex items-center justify-center backdrop-blur-sm">
                    <span className="text-2xl">‚ùì</span>
                  </div>
                  <div className="text-left">
                    <div className="text-lg font-bold">Suallarƒ± H…ôll Et</div>
                    <div className="text-sm text-white/80">Test v…ô tap≈üƒ±rƒ±qlar</div>
                  </div>
                  <div className="ml-auto">
                    <div className="w-8 h-8 rounded-full bg-white/20 flex items-center justify-center">
                      <span className="text-white">‚Üí</span>
                    </div>
                  </div>
                </div>
                
                {/* Hover effect */}
                <div className="absolute inset-0 bg-gradient-to-r from-white/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              </button>

              <button
                onClick={() => alert('Ba≈üqa imtahan n√∂v√º (demo)')}
                className={`group relative overflow-hidden p-6 rounded-3xl transition-all duration-300 transform hover:scale-[1.02] shadow-xl ${
                  isDarkMode
                    ? 'bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white shadow-blue-500/25'
                    : 'bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white shadow-blue-500/25'
                }`}
              >
                <div className="flex items-center justify-center gap-4">
                  <div className="w-14 h-14 rounded-2xl bg-white/20 flex items-center justify-center backdrop-blur-sm">
                    <span className="text-2xl">üìã</span>
                  </div>
                  <div className="text-left">
                    <div className="text-lg font-bold">ƒ∞mtahana Ba≈üla</div>
                    <div className="text-sm text-white/80">Bilikl…ôrinizi yoxlayƒ±n</div>
                  </div>
                  <div className="ml-auto">
                    <div className="w-8 h-8 rounded-full bg-white/20 flex items-center justify-center">
                      <span className="text-white">‚Üí</span>
                    </div>
                  </div>
                </div>
                
                {/* Hover effect */}
                <div className="absolute inset-0 bg-gradient-to-r from-white/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
    {showPurchasePopup && (
      <div className="fixed inset-0 z-50 flex items-center justify-center">
        <div className="absolute inset-0 bg-black/50" onClick={() => setShowPurchasePopup(false)} />
        <div className={`relative z-10 w-[90%] max-w-iphone16 rounded-2xl p-5 shadow-xl border ${
          isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200'
        }`}>
          <div className={`text-base font-bold mb-2 ${isDarkMode ? 'text-gray-100' : 'text-gray-900'}`}>
            M√∂vzu kilidlidir
          </div>
          <div className={`${isDarkMode ? 'text-gray-300' : 'text-gray-600'} text-sm mb-4`}>
            Bu m√∂vzunu a√ßmaq √º√ß√ºn paket t…ôl…ôb olunur. Paket almaq ist…ôyirsiniz?
          </div>
          <div className="grid grid-cols-2 gap-2">
            <button
              onClick={() => setShowPurchasePopup(false)}
              className={`px-4 py-2 rounded-xl font-bold min-h-[40px] border ${
                isDarkMode ? 'bg-gray-700 border-gray-600 text-gray-200 hover:bg-gray-600' : 'bg-gray-100 border-gray-300 text-gray-700 hover:bg-gray-200'
              }`}
            >
              Baƒüla
            </button>
            <button
              onClick={() => {
                setShowPurchasePopup(false);
                navigate('Packages');
              }}
              className="px-4 py-2 rounded-xl font-bold min-h-[40px] bg-emerald-600 hover:bg-emerald-700 text-white"
            >
              Paket al
            </button>
          </div>
        </div>
      </div>
    )}
    </>
  );
}